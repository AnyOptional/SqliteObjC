//
//  ResultSet.h
//  SqliteObjC
//
//  Created by Archer on 2019/7/16.
//

#import <Foundation/Foundation.h>
#import "ResultSetMetaData.h"

NS_ASSUME_NONNULL_BEGIN

/**
 A table of data representing a database result set, which
 is usually generated by executing a statement that queries the database.
 */
@protocol ResultSet <NSObject>

/**
 Retrieve next row for result set.
 
 You must always invoke `next` or `nextWithError` before attempting to access the values returned in a query, even if you're only expecting one.
 
 @return `YES` if row successfully retrieved; `NO` if end of result set reached 
 */
- (BOOL)next;

/**
 Close result set
 */
- (void)close;

/**
 Result set integer value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return `int` value of the result set's column.
 */
- (int)intForColumnIndex:(NSInteger)columnIdx;

/**
 Result set integer value for column.
 
 @param columnName `NSString` value of the name of the column.
 
 @return `int` value of the result set's column.
 */
- (int)intForColumn:(NSString *)columnName;

/**
 Result set long value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return `long` value of the result set's column.
 */
- (long)longForColumnIndex:(NSInteger)columnIdx;

/**
 Result set `long` value for column.
 
 @param columnName `NSString` value of the name of the column.
 
 @return `long` value of the result set's column.
 */
- (long)longForColumn:(NSString *)columnName;

/**
 Result set `BOOL` value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return `BOOL` value of the result set's column.
 */
- (BOOL)boolForColumnIndex:(NSInteger)columnIdx;

/**
 Result set `BOOL` value for column.
 
 @param columnName `NSString` value of the name of the column.
 
 @return `BOOL` value of the result set's column.
 */
- (BOOL)boolForColumn:(NSString *)columnName;

/**
 Result set `double` value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return `double` value of the result set's column.
 */
- (double)doubleForColumnIndex:(NSInteger)columnIdx;

/**
 Result set `double` value for column.
 
 @param columnName `NSString` value of the name of the column.
 
 @return `double` value of the result set's column.
 */
- (double)doubleForColumn:(NSString *)columnName;

/**
 Result set `NSString` value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return String value of the result set's column.
 */
- (nullable NSString *)stringForColumnIndex:(NSInteger)columnIdx;

/**
 Result set `NSString` value for column.
 
 @param columnName `NSString` value of the name of the column.
 
 @return String value of the result set's column.
 */
- (nullable NSString *)stringForColumn:(NSString *)columnName;

/**
 Result set `NSData` value for column.
 
 @param columnIdx Zero-based index for column.
 
 @return Data value of the result set's column.
 */
- (nullable NSData *)dataForColumnIndex:(NSInteger)columnIdx;

/**
 Result set `NSData` value for column.
 
 This is useful when storing binary data in table (such as image or the like).
 
 @param columnName `NSString` value of the name of the column.
 
 @return Data value of the result set's column.
 */
- (nullable NSData *)dataForColumn:(NSString *)columnName;

/**
 Result set object for column.
 
 @param columnIdx Zero-based index for column.
 
 @return Either `NSNumber`, `NSString`, `NSData`, or `NSNull`. If the column was `NULL`, this returns `[NSNull null]` object.
 */
- (nullable id)objectForColumnIndex:(NSInteger)columnIdx;

/**
 Result set object for column.
 
 @param columnName Name of the column.
 
 @return Either `NSNumber`, `NSString`, `NSData`, or `NSNull`. If the column was `NULL`, this returns `[NSNull null]` object.
 */
- (nullable id)objectForColumn:(NSString *)columnName;

/**
 Is the column `NULL`?
 
 @param columnIdx Zero-based index for column.
 
 @return `YES` if column is `NULL`; `NO` if not `NULL`.
 */
- (BOOL)columnIndexIsNull:(NSInteger)columnIdx;

/**
 Is the column `NULL`?
 
 @param columnName `NSString` value of the name of the column.
 
 @return `YES` if column is `NULL`; `NO` if not `NULL`.
 */
- (BOOL)columnIsNull:(NSString *)columnName;

/**
 The description of this `ResultSet` object's columns
 */
@property (nonatomic, readonly, strong) id<ResultSetMetaData> metaData;

@end

NS_ASSUME_NONNULL_END
